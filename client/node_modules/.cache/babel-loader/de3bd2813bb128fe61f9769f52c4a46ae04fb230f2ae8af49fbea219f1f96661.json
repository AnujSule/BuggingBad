{"ast":null,"code":"var _jsxFileName = \"/Users/anujsule/BuggingBad/client/src/components/UserContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext(undefined);\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [role, setRole] = useState(null);\n  const loginAsUser = () => setRole('user');\n  const loginAsAdmin = () => setRole('admin');\n  const logout = () => setRole(null);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      role,\n      loginAsUser,\n      loginAsAdmin,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"T/z4/POHpqrT7RSruWe/k983y8I=\");\n_c = UserProvider;\nexport const useUser = () => {\n  _s2();\n  const ctx = useContext(UserContext);\n  if (!ctx) throw new Error('useUser must be used within a UserProvider');\n  return ctx;\n};\n_s2(useUser, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","UserContext","undefined","UserProvider","children","_s","role","setRole","loginAsUser","loginAsAdmin","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUser","_s2","ctx","Error","$RefreshReg$"],"sources":["/Users/anujsule/BuggingBad/client/src/components/UserContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode } from 'react';\n\ntype Role = 'user' | 'admin' | null;\n\ninterface UserContextType {\n  role: Role;\n  loginAsUser: () => void;\n  loginAsAdmin: () => void;\n  logout: () => void;\n}\n\nconst UserContext = createContext<UserContextType | undefined>(undefined);\n\nexport const UserProvider = ({ children }: { children: ReactNode }) => {\n  const [role, setRole] = useState<Role>(null);\n\n  const loginAsUser = () => setRole('user');\n  const loginAsAdmin = () => setRole('admin');\n  const logout = () => setRole(null);\n\n  return (\n    <UserContext.Provider value={{ role, loginAsUser, loginAsAdmin, logout }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport const useUser = () => {\n  const ctx = useContext(UserContext);\n  if (!ctx) throw new Error('useUser must be used within a UserProvider');\n  return ctx;\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW9E,MAAMC,WAAW,gBAAGL,aAAa,CAA8BM,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAkC,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAO,IAAI,CAAC;EAE5C,MAAMU,WAAW,GAAGA,CAAA,KAAMD,OAAO,CAAC,MAAM,CAAC;EACzC,MAAME,YAAY,GAAGA,CAAA,KAAMF,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMG,MAAM,GAAGA,CAAA,KAAMH,OAAO,CAAC,IAAI,CAAC;EAElC,oBACEP,OAAA,CAACC,WAAW,CAACU,QAAQ;IAACC,KAAK,EAAE;MAAEN,IAAI;MAAEE,WAAW;MAAEC,YAAY;MAAEC;IAAO,CAAE;IAAAN,QAAA,EACtEA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACX,EAAA,CAZWF,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAczB,OAAO,MAAMe,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,GAAG,GAAGvB,UAAU,CAACI,WAAW,CAAC;EACnC,IAAI,CAACmB,GAAG,EAAE,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EACvE,OAAOD,GAAG;AACZ,CAAC;AAACD,GAAA,CAJWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}