// Prisma schema for ReWear

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  points    Int      @default(0)
  role      Role     @default(USER)
  items     Item[]
  swaps     Swap[]   @relation("RequesterSwaps")
  actions   AdminAction[]
  createdAt DateTime @default(now())
}

enum Role {
  USER
  ADMIN
}

model Item {
  id          String   @id @default(uuid())
  title       String
  description String
  images      String[]
  category    String
  type        String
  size        String
  condition   String
  tags        String[]
  status      ItemStatus @default(AVAILABLE)
  uploader    User      @relation(fields: [uploaderId], references: [id])
  uploaderId  String
  swaps       Swap[]
  createdAt   DateTime  @default(now())
}

enum ItemStatus {
  AVAILABLE
  SWAPPED
  PENDING
}

model Swap {
  id          String   @id @default(uuid())
  item        Item     @relation(fields: [itemId], references: [id])
  itemId      String
  requester   User     @relation("RequesterSwaps", fields: [requesterId], references: [id])
  requesterId String
  status      SwapStatus @default(PENDING)
  createdAt   DateTime  @default(now())
}

enum SwapStatus {
  PENDING
  ACCEPTED
  REJECTED
  COMPLETED
}

model PointsTransaction {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  amount    Int
  type      TransactionType
  reason    String
  createdAt DateTime @default(now())
}

enum TransactionType {
  EARN
  SPEND
}

model AdminAction {
  id        String   @id @default(uuid())
  admin     User     @relation(fields: [adminId], references: [id])
  adminId   String
  item      Item     @relation(fields: [itemId], references: [id])
  itemId    String
  action    ActionType
  reason    String
  createdAt DateTime @default(now())
}

enum ActionType {
  APPROVE
  REJECT
  REMOVE
} 